{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { clamp, head, last } from '@antv/util';\nimport RectMask from './rect';\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\n/**\n * @ignore\n */\nvar DimRect = /** @class */function (_super) {\n  __extends(DimRect, _super);\n  function DimRect() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dim = 'x';\n    _this.inPlot = true;\n    return _this;\n  }\n  DimRect.prototype.getRegion = function () {\n    var start = null;\n    var end = null;\n    var points = this.points;\n    var dim = this.dim;\n    var coord = this.context.view.getCoordinate();\n    var normalStart = coord.invert(head(points));\n    var normalEnd = coord.invert(last(points));\n    if (this.inPlot) {\n      // 约束到 0 - 1 范围内\n      clampPoint(normalStart);\n      clampPoint(normalEnd);\n    }\n    if (dim === 'x') {\n      // x 轴方向扩展, y 轴方向占满全部\n      start = coord.convert({\n        x: normalStart.x,\n        y: 0\n      });\n      end = coord.convert({\n        x: normalEnd.x,\n        y: 1\n      });\n    } else {\n      // y 轴方向扩展, x 轴方向占满全部\n      start = coord.convert({\n        x: 0,\n        y: normalStart.y\n      });\n      end = coord.convert({\n        x: 1,\n        y: normalEnd.y\n      });\n    }\n    return {\n      start: start,\n      end: end\n    };\n  };\n  return DimRect;\n}(RectMask);\nexport default DimRect;","map":{"version":3,"names":["clamp","head","last","RectMask","clampPoint","point","x","y","DimRect","_super","__extends","_this","apply","arguments","dim","inPlot","prototype","getRegion","start","end","points","coord","context","view","getCoordinate","normalStart","invert","normalEnd","convert"],"sources":["../../../../src/interaction/action/mask/dim-rect.ts"],"sourcesContent":["import { clamp, head, last } from '@antv/util';\nimport { Region } from '../../../interface';\nimport RectMask from './rect';\n\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\n\n/**\n * @ignore\n */\nclass DimRect extends RectMask {\n  protected dim = 'x';\n  protected inPlot = true;\n  protected getRegion(): Region {\n    let start = null;\n    let end = null;\n    const points = this.points;\n    const dim = this.dim;\n    const coord = this.context.view.getCoordinate();\n    const normalStart = coord.invert(head(points));\n    const normalEnd = coord.invert(last(points));\n    if (this.inPlot) {\n      // 约束到 0 - 1 范围内\n      clampPoint(normalStart);\n      clampPoint(normalEnd);\n    }\n    if (dim === 'x') {\n      // x 轴方向扩展, y 轴方向占满全部\n      start = coord.convert({\n        x: normalStart.x,\n        y: 0,\n      });\n      end = coord.convert({\n        x: normalEnd.x,\n        y: 1,\n      });\n    } else {\n      // y 轴方向扩展, x 轴方向占满全部\n      start = coord.convert({\n        x: 0,\n        y: normalStart.y,\n      });\n      end = coord.convert({\n        x: 1,\n        y: normalEnd.y,\n      });\n    }\n    return {\n      start,\n      end,\n    };\n  }\n}\n\nexport default DimRect;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,IAAI,QAAQ,YAAY;AAE9C,OAAOC,QAAQ,MAAM,QAAQ;AAE7B,SAASC,UAAUA,CAACC,KAAK;EACvBA,KAAK,CAACC,CAAC,GAAGN,KAAK,CAACK,KAAK,CAACC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9BD,KAAK,CAACE,CAAC,GAAGP,KAAK,CAACK,KAAK,CAACE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAChC;AAEA;;;AAGA,IAAAC,OAAA,0BAAAC,MAAA;EAAsBC,SAAA,CAAAF,OAAA,EAAAC,MAAA;EAAtB,SAAAD,QAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACYF,KAAA,CAAAG,GAAG,GAAG,GAAG;IACTH,KAAA,CAAAI,MAAM,GAAG,IAAI;;EAwCzB;EAvCYP,OAAA,CAAAQ,SAAA,CAAAC,SAAS,GAAnB;IACE,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,GAAG,GAAG,IAAI;IACd,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAMN,GAAG,GAAG,IAAI,CAACA,GAAG;IACpB,IAAMO,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,aAAa,EAAE;IAC/C,IAAMC,WAAW,GAAGJ,KAAK,CAACK,MAAM,CAACzB,IAAI,CAACmB,MAAM,CAAC,CAAC;IAC9C,IAAMO,SAAS,GAAGN,KAAK,CAACK,MAAM,CAACxB,IAAI,CAACkB,MAAM,CAAC,CAAC;IAC5C,IAAI,IAAI,CAACL,MAAM,EAAE;MACf;MACAX,UAAU,CAACqB,WAAW,CAAC;MACvBrB,UAAU,CAACuB,SAAS,CAAC;;IAEvB,IAAIb,GAAG,KAAK,GAAG,EAAE;MACf;MACAI,KAAK,GAAGG,KAAK,CAACO,OAAO,CAAC;QACpBtB,CAAC,EAAEmB,WAAW,CAACnB,CAAC;QAChBC,CAAC,EAAE;OACJ,CAAC;MACFY,GAAG,GAAGE,KAAK,CAACO,OAAO,CAAC;QAClBtB,CAAC,EAAEqB,SAAS,CAACrB,CAAC;QACdC,CAAC,EAAE;OACJ,CAAC;KACH,MAAM;MACL;MACAW,KAAK,GAAGG,KAAK,CAACO,OAAO,CAAC;QACpBtB,CAAC,EAAE,CAAC;QACJC,CAAC,EAAEkB,WAAW,CAAClB;OAChB,CAAC;MACFY,GAAG,GAAGE,KAAK,CAACO,OAAO,CAAC;QAClBtB,CAAC,EAAE,CAAC;QACJC,CAAC,EAAEoB,SAAS,CAACpB;OACd,CAAC;;IAEJ,OAAO;MACLW,KAAK,EAAAA,KAAA;MACLC,GAAG,EAAAA;KACJ;EACH,CAAC;EACH,OAAAX,OAAC;AAAD,CAAC,CA1CqBL,QAAQ;AA4C9B,eAAeK,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}