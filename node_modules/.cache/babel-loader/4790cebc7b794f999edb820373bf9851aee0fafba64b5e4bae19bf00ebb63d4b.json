{"ast":null,"code":"//\n//\n//\n//\n\nimport { Chart } from \"@antv/g2\";\nexport default {\n  name: \"helloworldB\",\n  props: {\n    msg: Object\n  },\n  data() {\n    return {\n      mapData: [{\n        month: \"Jan\",\n        city: \"Tokyo\",\n        temperature: 7\n      }, {\n        month: \"Jan\",\n        city: \"London\",\n        temperature: 3.9\n      }, {\n        month: \"Feb\",\n        city: \"Tokyo\",\n        temperature: 6.9\n      }, {\n        month: \"Feb\",\n        city: \"London\",\n        temperature: 4.2\n      }, {\n        month: \"Mar\",\n        city: \"Tokyo\",\n        temperature: 9.5\n      }, {\n        month: \"Mar\",\n        city: \"London\",\n        temperature: 5.7\n      }, {\n        month: \"Apr\",\n        city: \"Tokyo\",\n        temperature: 14.5\n      }, {\n        month: \"Apr\",\n        city: \"London\",\n        temperature: 8.5\n      }, {\n        month: \"May\",\n        city: \"Tokyo\",\n        temperature: 18.4\n      }, {\n        month: \"May\",\n        city: \"London\",\n        temperature: 11.9\n      }, {\n        month: \"Jun\",\n        city: \"Tokyo\",\n        temperature: 21.5\n      }, {\n        month: \"Jun\",\n        city: \"London\",\n        temperature: 15.2\n      }, {\n        month: \"Jul\",\n        city: \"Tokyo\",\n        temperature: 25.2\n      }, {\n        month: \"Jul\",\n        city: \"London\",\n        temperature: 17\n      }, {\n        month: \"Aug\",\n        city: \"Tokyo\",\n        temperature: 26.5\n      }, {\n        month: \"Aug\",\n        city: \"London\",\n        temperature: 16.6\n      }, {\n        month: \"Sep\",\n        city: \"Tokyo\",\n        temperature: 23.3\n      }, {\n        month: \"Sep\",\n        city: \"London\",\n        temperature: 14.2\n      }, {\n        month: \"Oct\",\n        city: \"Tokyo\",\n        temperature: 18.3\n      }, {\n        month: \"Oct\",\n        city: \"London\",\n        temperature: 10.3\n      }, {\n        month: \"Nov\",\n        city: \"Tokyo\",\n        temperature: 13.9\n      }, {\n        month: \"Nov\",\n        city: \"London\",\n        temperature: 6.6\n      }, {\n        month: \"Dec\",\n        city: \"Tokyo\",\n        temperature: 9.6\n      }, {\n        month: \"Dec\",\n        city: \"London\",\n        temperature: 4.8\n      }]\n    };\n  },\n  mounted() {\n    this.initG2();\n  },\n  methods: {\n    initG2() {\n      this.chart = new Chart({\n        container: \"containerA\",\n        height: this.msg.height,\n        width: this.msg.width\n      });\n      this.chart.data(this.mapData);\n      this.chart.scale({\n        month: {\n          range: [0, 1]\n        },\n        temperature: {\n          nice: true\n        }\n      });\n      this.chart.tooltip({\n        showCrosshairs: true,\n        shared: true\n      });\n      this.chart.axis(\"temperature\", {\n        label: {\n          formatter: val => {\n            return val + \" °C\";\n          }\n        }\n      });\n      this.chart.line().position(\"month*temperature\").color(\"city\").shape(\"smooth\");\n      this.chart.point().position(\"month*temperature\").color(\"city\").shape(\"circle\");\n      this.chart.render();\n    },\n    changeG2() {\n      this.chart.changeSize(this.msg.width, this.msg.height - 30);\n    }\n  }\n};","map":{"version":3,"names":["Chart","name","props","msg","Object","data","mapData","month","city","temperature","mounted","initG2","methods","chart","container","height","width","scale","range","nice","tooltip","showCrosshairs","shared","axis","label","formatter","val","line","position","color","shape","point","render","changeG2","changeSize"],"sources":["src/components/HelloWorldB.vue"],"sourcesContent":["<template>\r\n  <div id=\"containerA\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart } from \"@antv/g2\";\r\nexport default {\r\n  name: \"helloworldB\",\r\n  props: {\r\n    msg: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      mapData: [\r\n        { month: \"Jan\", city: \"Tokyo\", temperature: 7 },\r\n        { month: \"Jan\", city: \"London\", temperature: 3.9 },\r\n        { month: \"Feb\", city: \"Tokyo\", temperature: 6.9 },\r\n        { month: \"Feb\", city: \"London\", temperature: 4.2 },\r\n        { month: \"Mar\", city: \"Tokyo\", temperature: 9.5 },\r\n        { month: \"Mar\", city: \"London\", temperature: 5.7 },\r\n        { month: \"Apr\", city: \"Tokyo\", temperature: 14.5 },\r\n        { month: \"Apr\", city: \"London\", temperature: 8.5 },\r\n        { month: \"May\", city: \"Tokyo\", temperature: 18.4 },\r\n        { month: \"May\", city: \"London\", temperature: 11.9 },\r\n        { month: \"Jun\", city: \"Tokyo\", temperature: 21.5 },\r\n        { month: \"Jun\", city: \"London\", temperature: 15.2 },\r\n        { month: \"Jul\", city: \"Tokyo\", temperature: 25.2 },\r\n        { month: \"Jul\", city: \"London\", temperature: 17 },\r\n        { month: \"Aug\", city: \"Tokyo\", temperature: 26.5 },\r\n        { month: \"Aug\", city: \"London\", temperature: 16.6 },\r\n        { month: \"Sep\", city: \"Tokyo\", temperature: 23.3 },\r\n        { month: \"Sep\", city: \"London\", temperature: 14.2 },\r\n        { month: \"Oct\", city: \"Tokyo\", temperature: 18.3 },\r\n        { month: \"Oct\", city: \"London\", temperature: 10.3 },\r\n        { month: \"Nov\", city: \"Tokyo\", temperature: 13.9 },\r\n        { month: \"Nov\", city: \"London\", temperature: 6.6 },\r\n        { month: \"Dec\", city: \"Tokyo\", temperature: 9.6 },\r\n        { month: \"Dec\", city: \"London\", temperature: 4.8 },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initG2();\r\n  },\r\n  methods: {\r\n    initG2() {\r\n      this.chart = new Chart({\r\n        container: \"containerA\",\r\n        height: this.msg.height,\r\n        width: this.msg.width,\r\n      });\r\n\r\n      this.chart.data(this.mapData);\r\n      this.chart.scale({\r\n        month: {\r\n          range: [0, 1],\r\n        },\r\n        temperature: {\r\n          nice: true,\r\n        },\r\n      });\r\n\r\n      this.chart.tooltip({\r\n        showCrosshairs: true,\r\n        shared: true,\r\n      });\r\n\r\n      this.chart.axis(\"temperature\", {\r\n        label: {\r\n          formatter: (val) => {\r\n            return val + \" °C\";\r\n          },\r\n        },\r\n      });\r\n\r\n      this.chart\r\n        .line()\r\n        .position(\"month*temperature\")\r\n        .color(\"city\")\r\n        .shape(\"smooth\");\r\n\r\n      this.chart\r\n        .point()\r\n        .position(\"month*temperature\")\r\n        .color(\"city\")\r\n        .shape(\"circle\");\r\n\r\n      this.chart.render();\r\n    },\r\n    changeG2() {\r\n      this.chart.changeSize(this.msg.width, this.msg.height - 30);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";;;;;AAKA,SAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;QAAAC,WAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,MAAA;EACA;EACAC,OAAA;IACAD,OAAA;MACA,KAAAE,KAAA,OAAAb,KAAA;QACAc,SAAA;QACAC,MAAA,OAAAZ,GAAA,CAAAY,MAAA;QACAC,KAAA,OAAAb,GAAA,CAAAa;MACA;MAEA,KAAAH,KAAA,CAAAR,IAAA,MAAAC,OAAA;MACA,KAAAO,KAAA,CAAAI,KAAA;QACAV,KAAA;UACAW,KAAA;QACA;QACAT,WAAA;UACAU,IAAA;QACA;MACA;MAEA,KAAAN,KAAA,CAAAO,OAAA;QACAC,cAAA;QACAC,MAAA;MACA;MAEA,KAAAT,KAAA,CAAAU,IAAA;QACAC,KAAA;UACAC,SAAA,EAAAC,GAAA;YACA,OAAAA,GAAA;UACA;QACA;MACA;MAEA,KAAAb,KAAA,CACAc,IAAA,GACAC,QAAA,sBACAC,KAAA,SACAC,KAAA;MAEA,KAAAjB,KAAA,CACAkB,KAAA,GACAH,QAAA,sBACAC,KAAA,SACAC,KAAA;MAEA,KAAAjB,KAAA,CAAAmB,MAAA;IACA;IACAC,SAAA;MACA,KAAApB,KAAA,CAAAqB,UAAA,MAAA/B,GAAA,CAAAa,KAAA,OAAAb,GAAA,CAAAY,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}