{"ast":null,"code":"//\n//\n//\n//\n\nimport { Chart } from \"@antv/g2\";\nexport default {\n  name: \"helloworldA\",\n  props: {\n    msg: Object\n  },\n  data() {\n    return {\n      data: [{\n        type: \"微博\",\n        value: 93.33\n      }, {\n        type: \"其他\",\n        value: 6.67\n      }, {\n        type: \"论坛\",\n        value: 4.77\n      }, {\n        type: \"网站\",\n        value: 1.44\n      }, {\n        type: \"微信\",\n        value: 1.12\n      }, {\n        type: \"客户端\",\n        value: 1.05\n      }, {\n        type: \"新闻\",\n        value: 0.81\n      }, {\n        type: \"视频\",\n        value: 0.39\n      }, {\n        type: \"博客\",\n        value: 0.37\n      }, {\n        type: \"报刊\",\n        value: 0.17\n      }]\n    };\n  },\n  created() {},\n  mounted() {\n    this.initG2();\n  },\n  methods: {\n    initG2() {\n      this.chart = new Chart({\n        container: \"container\",\n        // autoFit: true,\n        width: this.msg.width,\n        height: this.msg.height\n      });\n      this.chart.coordinate(\"theta\", {\n        radius: 0.75\n      });\n      this.chart.data(this.data);\n      this.chart.tooltip({\n        showTitle: false,\n        showMarkers: false\n      });\n      this.chart.interval().position(\"value\").color(\"type\").label(\"type*value\", {\n        layout: [{\n          type: \"pie-spider\"\n        }, {\n          type: \"limit-in-plot\",\n          cfg: {\n            action: \"ellipsis\" /** 或 translate */\n          }\n        }],\n\n        labelHeight: 20,\n        content: obj => `${obj.type} (${obj.value})`,\n        labelLine: {\n          style: {\n            lineWidth: 0.5\n          }\n        }\n      }).adjust(\"stack\");\n      this.chart.interaction(\"element-active\");\n      this.chart.render();\n    },\n    changeG2() {\n      this.chart.changeSize(this.msg.width, this.msg.height - 30);\n    }\n  }\n};","map":{"version":3,"names":["Chart","name","props","msg","Object","data","type","value","created","mounted","initG2","methods","chart","container","width","height","coordinate","radius","tooltip","showTitle","showMarkers","interval","position","color","label","layout","cfg","action","labelHeight","content","obj","labelLine","style","lineWidth","adjust","interaction","render","changeG2","changeSize"],"sources":["src/components/HelloWorldA.vue"],"sourcesContent":["<template>\r\n  <div id=\"container\" ref=\"chartDom\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart } from \"@antv/g2\";\r\n\r\nexport default {\r\n  name: \"helloworldA\",\r\n  props: {\r\n    msg: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      data: [\r\n        { type: \"微博\", value: 93.33 },\r\n        { type: \"其他\", value: 6.67 },\r\n        { type: \"论坛\", value: 4.77 },\r\n        { type: \"网站\", value: 1.44 },\r\n        { type: \"微信\", value: 1.12 },\r\n        { type: \"客户端\", value: 1.05 },\r\n        { type: \"新闻\", value: 0.81 },\r\n        { type: \"视频\", value: 0.39 },\r\n        { type: \"博客\", value: 0.37 },\r\n        { type: \"报刊\", value: 0.17 },\r\n      ],\r\n    };\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    this.initG2();\r\n  },\r\n  methods: {\r\n    initG2() {\r\n      this.chart = new Chart({\r\n        container: \"container\",\r\n        // autoFit: true,\r\n        width: this.msg.width,\r\n        height: this.msg.height,\r\n      });\r\n\r\n      this.chart.coordinate(\"theta\", {\r\n        radius: 0.75,\r\n      });\r\n\r\n      this.chart.data(this.data);\r\n\r\n      this.chart.tooltip({\r\n        showTitle: false,\r\n        showMarkers: false,\r\n      });\r\n\r\n      this.chart\r\n        .interval()\r\n        .position(\"value\")\r\n        .color(\"type\")\r\n        .label(\"type*value\", {\r\n          layout: [\r\n            { type: \"pie-spider\" },\r\n            {\r\n              type: \"limit-in-plot\",\r\n              cfg: { action: \"ellipsis\" /** 或 translate */ },\r\n            },\r\n          ],\r\n          labelHeight: 20,\r\n          content: (obj) => `${obj.type} (${obj.value})`,\r\n          labelLine: {\r\n            style: {\r\n              lineWidth: 0.5,\r\n            },\r\n          },\r\n        })\r\n        .adjust(\"stack\");\r\n\r\n      this.chart.interaction(\"element-active\");\r\n\r\n      this.chart.render();\r\n    },\r\n    changeG2() {\r\n      this.chart.changeSize(this.msg.width, this.msg.height - 30);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";;;;;AAKA,SAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAA,IAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,QAAA;EACAC,QAAA;IACA,KAAAC,MAAA;EACA;EACAC,OAAA;IACAD,OAAA;MACA,KAAAE,KAAA,OAAAZ,KAAA;QACAa,SAAA;QACA;QACAC,KAAA,OAAAX,GAAA,CAAAW,KAAA;QACAC,MAAA,OAAAZ,GAAA,CAAAY;MACA;MAEA,KAAAH,KAAA,CAAAI,UAAA;QACAC,MAAA;MACA;MAEA,KAAAL,KAAA,CAAAP,IAAA,MAAAA,IAAA;MAEA,KAAAO,KAAA,CAAAM,OAAA;QACAC,SAAA;QACAC,WAAA;MACA;MAEA,KAAAR,KAAA,CACAS,QAAA,GACAC,QAAA,UACAC,KAAA,SACAC,KAAA;QACAC,MAAA,GACA;UAAAnB,IAAA;QAAA,GACA;UACAA,IAAA;UACAoB,GAAA;YAAAC,MAAA;UAAA;QACA,EACA;;QACAC,WAAA;QACAC,OAAA,EAAAC,GAAA,OAAAA,GAAA,CAAAxB,IAAA,KAAAwB,GAAA,CAAAvB,KAAA;QACAwB,SAAA;UACAC,KAAA;YACAC,SAAA;UACA;QACA;MACA,GACAC,MAAA;MAEA,KAAAtB,KAAA,CAAAuB,WAAA;MAEA,KAAAvB,KAAA,CAAAwB,MAAA;IACA;IACAC,SAAA;MACA,KAAAzB,KAAA,CAAA0B,UAAA,MAAAnC,GAAA,CAAAW,KAAA,OAAAX,GAAA,CAAAY,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}