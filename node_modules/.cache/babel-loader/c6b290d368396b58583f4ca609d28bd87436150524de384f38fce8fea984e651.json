{"ast":null,"code":"import { each, isArray } from '@antv/util';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nfunction getMaskBBox(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  var maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskBBox;\n}\nfunction getMaskPath(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  var maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskShape.attr('path');\n}\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context) {\n  var event = context.event;\n  var element;\n  var target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context) {\n  var event = context.event;\n  var target = event.target;\n  var delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\nexport function isElementChange(context) {\n  var event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context) {\n  var event = context.event;\n  var target = event.target;\n  return target && target.get('name') === 'mask';\n}\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context, tolerance) {\n  var target = context.event.target;\n  if (target.get('type') === 'path') {\n    var maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  var maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context, sibling, tolerance) {\n  var maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  var view = context.view;\n  var start = getSiblingPoint(view, sibling, {\n    x: maskBBox.x,\n    y: maskBBox.y\n  });\n  var end = getSiblingPoint(view, sibling, {\n    x: maskBBox.maxX,\n    y: maskBBox.maxY\n  });\n  var box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y\n  };\n  return getIntersectElements(sibling, box);\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, function (subView) {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view, field, value) {\n  var elements = getElements(view);\n  return elements.filter(function (el) {\n    return getElementValue(el, field) === value;\n  });\n}\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view, stateName) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.getElementsBy(function (el) {\n      return el.hasState(stateName);\n    });\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element, field) {\n  var model = element.getModel();\n  var record = model.data;\n  var value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view, box) {\n  var elements = getElements(view);\n  var rst = [];\n  each(elements, function (el) {\n    var shape = el.shape;\n    var shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path) {\n  var points = [];\n  each(path, function (seg) {\n    var command = seg[0];\n    if (command !== 'A') {\n      for (var i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      var length_1 = seg.length;\n      points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view, path) {\n  var elements = getElements(view);\n  var points = pathToPoints(path);\n  var rst = elements.filter(function (el) {\n    var shape = el.shape;\n    var shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      var shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map(function (co) {\n    return co.component;\n  });\n}\n/** @ignore */\nexport function distance(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/** @ignore */\nexport function getSpline(points, z) {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  var first = points[0];\n  var arr = [];\n  each(points, function (point) {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  var path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box, point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view) {\n  var parent = view.parent;\n  var siblings = null;\n  if (parent) {\n    siblings = parent.views.filter(function (sub) {\n      return sub !== view;\n    });\n  }\n  return siblings;\n}\nfunction point2Normalize(view, point) {\n  var coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view, sibling, point) {\n  var normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records, record, xFiled, yField) {\n  var isIn = false;\n  each(records, function (r) {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view, field) {\n  var scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, function (subView) {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n\n  return scale;\n}","map":{"version":3,"names":["each","isArray","catmullRom2bezier","getLinePath","toPoints","isPolygonsIntersect","getMaskBBox","context","tolerance","event","maskShape","target","maskBBox","getCanvasBBox","width","height","getMaskPath","attr","getCurrentElement","element","get","getDelegationObject","delegateObject","isElementChange","gEvent","fromShape","toShape","isList","component","isSlider","isMask","getMaskedElements","maskPath","getElementsByPath","view","getIntersectElements","getSiblingMaskElements","sibling","start","getSiblingPoint","x","y","end","maxX","maxY","box","minX","minY","getElements","geometries","rst","geom","elements","concat","views","length","subView","getElementsByField","field","value","filter","el","getElementValue","getElementsByState","stateName","getElementsBy","hasState","model","getModel","record","data","intersectRect","box1","box2","shape","shapeBBox","push","pathToPoints","path","points","seg","command","i","length_1","shapePoints","getComponents","map","co","distance","p1","p2","dx","dy","Math","sqrt","getSpline","z","first","arr","point","unshift","isInBox","getSilbings","parent","siblings","sub","point2Normalize","coord","getCoordinate","invert","normalPoint","convert","isInRecords","records","xFiled","yField","isIn","r","getScaleByField","scale"],"sources":["../../../src/interaction/action/util.ts"],"sourcesContent":["import { each, isArray } from '@antv/util';\nimport { View } from '../../chart';\nimport { BBox, PathCommand, Point } from '../../dependents';\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element/';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nimport { ComponentOption, IInteractionContext, LooseObject } from '../../interface';\n\nfunction getMaskBBox(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  const maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskBBox;\n}\n\nfunction getMaskPath(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  const maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskShape.attr('path');\n}\n\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context: IInteractionContext): Element {\n  const event = context.event;\n  let element;\n  const target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context: IInteractionContext): LooseObject {\n  const event = context.event;\n  const target = event.target;\n  let delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\n\nexport function isElementChange(context: IInteractionContext) {\n  const event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context: IInteractionContext): boolean {\n  const event = context.event;\n  const target = event.target;\n  return target && target.get('name') === 'mask';\n}\n\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context: IInteractionContext, tolerance: number): Element[] {\n  const target = context.event.target;\n  if (target.get('type') === 'path') {\n    const maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context: IInteractionContext, sibling: View, tolerance: number) {\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  const view = context.view;\n  const start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\n  const end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\n  const box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y,\n  };\n  return getIntersectElements(sibling, box);\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view: View): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, (subView) => {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view: View, field: string, value: any) {\n  const elements = getElements(view);\n  return elements.filter((el) => {\n    return getElementValue(el, field) === value;\n  });\n}\n\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view: View, stateName: string): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.getElementsBy((el) => el.hasState(stateName));\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element: Element, field) {\n  const model = element.getModel();\n  const record = model.data;\n  let value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view: View, box) {\n  const elements = getElements(view);\n  const rst = [];\n  each(elements, (el) => {\n    const shape = el.shape;\n    const shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path: any[]) {\n  const points = [];\n  each(path, (seg) => {\n    const command = seg[0];\n    if (command !== 'A') {\n      for (let i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      const length = seg.length;\n      points.push([seg[length - 2], seg[length - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view: View, path: any[]) {\n  const elements = getElements(view);\n  const points = pathToPoints(path);\n  const rst = elements.filter((el: Element) => {\n    const shape = el.shape;\n    let shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      const shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map((co: ComponentOption) => co.component);\n}\n\n/** @ignore */\nexport function distance(p1: Point, p2: Point) {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/** @ignore */\nexport function getSpline(points: Point[], z: boolean): PathCommand[] {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  const first = points[0];\n  const arr = [];\n  each(points, (point) => {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  const path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box: BBox, point: Point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view: View): View[] {\n  const parent = view.parent;\n  let siblings = null;\n  if (parent) {\n    siblings = parent.views.filter((sub) => sub !== view);\n  }\n  return siblings;\n}\n\nfunction point2Normalize(view: View, point: Point): Point {\n  const coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view: View, sibling: View, point: Point): Point {\n  const normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records: object[], record: object, xFiled: string, yField: string) {\n  let isIn = false;\n  each(records, (r) => {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view: View, field: string) {\n  let scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, (subView) => {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n  return scale;\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,OAAO,QAAQ,YAAY;AAK1C,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,gCAAgC;AAC/E,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,mBAAmB,QAAQ,iBAAiB;AAGrD,SAASC,WAAWA,CAACC,OAA4B,EAAEC,SAAiB;EAClE,IAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK;EAC3B,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM;EAC9B,IAAMC,QAAQ,GAAGF,SAAS,CAACG,aAAa,EAAE;EAC1C;EACA,IAAI,EAAED,QAAQ,CAACE,KAAK,IAAIN,SAAS,IAAII,QAAQ,CAACG,MAAM,IAAIP,SAAS,CAAC,EAAE;IAClE,OAAO,IAAI;;EAEb,OAAOI,QAAQ;AACjB;AAEA,SAASI,WAAWA,CAACT,OAA4B,EAAEC,SAAiB;EAClE,IAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK;EAC3B,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM;EAC9B,IAAMC,QAAQ,GAAGF,SAAS,CAACG,aAAa,EAAE;EAC1C;EACA,IAAI,EAAED,QAAQ,CAACE,KAAK,IAAIN,SAAS,IAAII,QAAQ,CAACG,MAAM,IAAIP,SAAS,CAAC,EAAE;IAClE,OAAO,IAAI;;EAEb,OAAOE,SAAS,CAACO,IAAI,CAAC,MAAM,CAAC;AAC/B;AAEA;;;;;AAKA,OAAM,SAAUC,iBAAiBA,CAACX,OAA4B;EAC5D,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAK;EAC3B,IAAIU,OAAO;EACX,IAAMR,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,IAAIA,MAAM,EAAE;IACVQ,OAAO,GAAGR,MAAM,CAACS,GAAG,CAAC,SAAS,CAAC;;EAEjC,OAAOD,OAAO;AAChB;AAEA;;;;;AAKA,OAAM,SAAUE,mBAAmBA,CAACd,OAA4B;EAC9D,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAK;EAC3B,IAAME,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,IAAIW,cAAc;EAClB,IAAIX,MAAM,EAAE;IACVW,cAAc,GAAGX,MAAM,CAACS,GAAG,CAAC,gBAAgB,CAAC;;EAE/C,OAAOE,cAAc;AACvB;AAEA,OAAM,SAAUC,eAAeA,CAAChB,OAA4B;EAC1D,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAK,CAACe,MAAM;EAClC;EACA,IAAIf,KAAK,IAAIA,KAAK,CAACgB,SAAS,IAAIhB,KAAK,CAACiB,OAAO,IAAIjB,KAAK,CAACgB,SAAS,CAACL,GAAG,CAAC,SAAS,CAAC,KAAKX,KAAK,CAACiB,OAAO,CAACN,GAAG,CAAC,SAAS,CAAC,EAAE;IAChH,OAAO,KAAK;;EAEd,OAAO,IAAI;AACb;AAEA;;;;;AAKA,OAAM,SAAUO,MAAMA,CAACL,cAA2B;EAChD,OAAOA,cAAc,IAAIA,cAAc,CAACM,SAAS,IAAIN,cAAc,CAACM,SAAS,CAACD,MAAM,EAAE;AACxF;AAEA;;;;;AAKA,OAAM,SAAUE,QAAQA,CAACP,cAA2B;EAClD,OAAOA,cAAc,IAAIA,cAAc,CAACM,SAAS,IAAIN,cAAc,CAACM,SAAS,CAACC,QAAQ,EAAE;AAC1F;AAEA;;;;;AAKA,OAAM,SAAUC,MAAMA,CAACvB,OAA4B;EACjD,IAAME,KAAK,GAAGF,OAAO,CAACE,KAAK;EAC3B,IAAME,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,OAAOA,MAAM,IAAIA,MAAM,CAACS,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM;AAChD;AAEA;;;;;AAKA,OAAM,SAAUW,iBAAiBA,CAACxB,OAA4B,EAAEC,SAAiB;EAC/E,IAAMG,MAAM,GAAGJ,OAAO,CAACE,KAAK,CAACE,MAAM;EACnC,IAAIA,MAAM,CAACS,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;IACjC,IAAMY,QAAQ,GAAGhB,WAAW,CAACT,OAAO,EAAEC,SAAS,CAAC;IAChD,IAAI,CAACwB,QAAQ,EAAE;MACb;;IAEF,OAAOC,iBAAiB,CAAC1B,OAAO,CAAC2B,IAAI,EAAEF,QAAQ,CAAC;;EAElD,IAAMpB,QAAQ,GAAGN,WAAW,CAACC,OAAO,EAAEC,SAAS,CAAC;EAChD;EACA,IAAI,CAACI,QAAQ,EAAE;IACb,OAAO,IAAI;;EAEb,OAAOuB,oBAAoB,CAAC5B,OAAO,CAAC2B,IAAI,EAAEtB,QAAQ,CAAC;AACrD;AAEA;;;AAGA,OAAM,SAAUwB,sBAAsBA,CAAC7B,OAA4B,EAAE8B,OAAa,EAAE7B,SAAiB;EACnG,IAAMI,QAAQ,GAAGN,WAAW,CAACC,OAAO,EAAEC,SAAS,CAAC;EAChD;EACA,IAAI,CAACI,QAAQ,EAAE;IACb,OAAO,IAAI;;EAEb,IAAMsB,IAAI,GAAG3B,OAAO,CAAC2B,IAAI;EACzB,IAAMI,KAAK,GAAGC,eAAe,CAACL,IAAI,EAAEG,OAAO,EAAE;IAAEG,CAAC,EAAE5B,QAAQ,CAAC4B,CAAC;IAAEC,CAAC,EAAE7B,QAAQ,CAAC6B;EAAC,CAAE,CAAC;EAC9E,IAAMC,GAAG,GAAGH,eAAe,CAACL,IAAI,EAAEG,OAAO,EAAE;IAAEG,CAAC,EAAE5B,QAAQ,CAAC+B,IAAI;IAAEF,CAAC,EAAE7B,QAAQ,CAACgC;EAAI,CAAE,CAAC;EAClF,IAAMC,GAAG,GAAG;IACVC,IAAI,EAAER,KAAK,CAACE,CAAC;IACbO,IAAI,EAAET,KAAK,CAACG,CAAC;IACbE,IAAI,EAAED,GAAG,CAACF,CAAC;IACXI,IAAI,EAAEF,GAAG,CAACD;GACX;EACD,OAAON,oBAAoB,CAACE,OAAO,EAAEQ,GAAG,CAAC;AAC3C;AAEA;;;;;AAKA,OAAM,SAAUG,WAAWA,CAACd,IAAU;EACpC,IAAMe,UAAU,GAAGf,IAAI,CAACe,UAAU;EAClC,IAAIC,GAAG,GAAc,EAAE;EACvBlD,IAAI,CAACiD,UAAU,EAAE,UAACE,IAAc;IAC9B,IAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAC9BF,GAAG,GAAGA,GAAG,CAACG,MAAM,CAACD,QAAQ,CAAC;EAC5B,CAAC,CAAC;EACF,IAAIlB,IAAI,CAACoB,KAAK,IAAIpB,IAAI,CAACoB,KAAK,CAACC,MAAM,EAAE;IACnCvD,IAAI,CAACkC,IAAI,CAACoB,KAAK,EAAE,UAACE,OAAO;MACvBN,GAAG,GAAGA,GAAG,CAACG,MAAM,CAACL,WAAW,CAACQ,OAAO,CAAC,CAAC;IACxC,CAAC,CAAC;;EAEJ,OAAON,GAAG;AACZ;AAEA;;;;;;;AAOA,OAAM,SAAUO,kBAAkBA,CAACvB,IAAU,EAAEwB,KAAa,EAAEC,KAAU;EACtE,IAAMP,QAAQ,GAAGJ,WAAW,CAACd,IAAI,CAAC;EAClC,OAAOkB,QAAQ,CAACQ,MAAM,CAAC,UAACC,EAAE;IACxB,OAAOC,eAAe,CAACD,EAAE,EAAEH,KAAK,CAAC,KAAKC,KAAK;EAC7C,CAAC,CAAC;AACJ;AAEA;;;;;;AAMA,OAAM,SAAUI,kBAAkBA,CAAC7B,IAAU,EAAE8B,SAAiB;EAC9D,IAAMf,UAAU,GAAGf,IAAI,CAACe,UAAU;EAClC,IAAIC,GAAG,GAAc,EAAE;EACvBlD,IAAI,CAACiD,UAAU,EAAE,UAACE,IAAc;IAC9B,IAAMC,QAAQ,GAAGD,IAAI,CAACc,aAAa,CAAC,UAACJ,EAAE;MAAK,OAAAA,EAAE,CAACK,QAAQ,CAACF,SAAS,CAAC;IAAtB,CAAsB,CAAC;IACnEd,GAAG,GAAGA,GAAG,CAACG,MAAM,CAACD,QAAQ,CAAC;EAC5B,CAAC,CAAC;EACF,OAAOF,GAAG;AACZ;AAEA;;;;;;AAMA,OAAM,SAAUY,eAAeA,CAAC3C,OAAgB,EAAEuC,KAAK;EACrD,IAAMS,KAAK,GAAGhD,OAAO,CAACiD,QAAQ,EAAE;EAChC,IAAMC,MAAM,GAAGF,KAAK,CAACG,IAAI;EACzB,IAAIX,KAAK;EACT,IAAI1D,OAAO,CAACoE,MAAM,CAAC,EAAE;IACnBV,KAAK,GAAGU,MAAM,CAAC,CAAC,CAAC,CAACX,KAAK,CAAC;GACzB,MAAM;IACLC,KAAK,GAAGU,MAAM,CAACX,KAAK,CAAC;;EAEvB,OAAOC,KAAK;AACd;AAEA;;;;;;AAMA,OAAM,SAAUY,aAAaA,CAACC,IAAI,EAAEC,IAAI;EACtC,OAAO,EAAEA,IAAI,CAAC3B,IAAI,GAAG0B,IAAI,CAAC7B,IAAI,IAAI8B,IAAI,CAAC9B,IAAI,GAAG6B,IAAI,CAAC1B,IAAI,IAAI2B,IAAI,CAAC1B,IAAI,GAAGyB,IAAI,CAAC5B,IAAI,IAAI6B,IAAI,CAAC7B,IAAI,GAAG4B,IAAI,CAACzB,IAAI,CAAC;AAC5G;AAEA;;;;;;AAMA,OAAM,SAAUZ,oBAAoBA,CAACD,IAAU,EAAEW,GAAG;EAClD,IAAMO,QAAQ,GAAGJ,WAAW,CAACd,IAAI,CAAC;EAClC,IAAMgB,GAAG,GAAG,EAAE;EACdlD,IAAI,CAACoD,QAAQ,EAAE,UAACS,EAAE;IAChB,IAAMa,KAAK,GAAGb,EAAE,CAACa,KAAK;IACtB,IAAMC,SAAS,GAAGD,KAAK,CAAC7D,aAAa,EAAE;IACvC,IAAI0D,aAAa,CAAC1B,GAAG,EAAE8B,SAAS,CAAC,EAAE;MACjCzB,GAAG,CAAC0B,IAAI,CAACf,EAAE,CAAC;;EAEhB,CAAC,CAAC;EACF,OAAOX,GAAG;AACZ;AACA,SAAS2B,YAAYA,CAACC,IAAW;EAC/B,IAAMC,MAAM,GAAG,EAAE;EACjB/E,IAAI,CAAC8E,IAAI,EAAE,UAACE,GAAG;IACb,IAAMC,OAAO,GAAGD,GAAG,CAAC,CAAC,CAAC;IACtB,IAAIC,OAAO,KAAK,GAAG,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACzB,MAAM,EAAE2B,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;QACzCH,MAAM,CAACH,IAAI,CAAC,CAACI,GAAG,CAACE,CAAC,CAAC,EAAEF,GAAG,CAACE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;KAEpC,MAAM;MACL,IAAMC,QAAM,GAAGH,GAAG,CAACzB,MAAM;MACzBwB,MAAM,CAACH,IAAI,CAAC,CAACI,GAAG,CAACG,QAAM,GAAG,CAAC,CAAC,EAAEH,GAAG,CAACG,QAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEnD,CAAC,CAAC;EACF,OAAOJ,MAAM;AACf;AACA;;;;;;AAMA,OAAM,SAAU9C,iBAAiBA,CAACC,IAAU,EAAE4C,IAAW;EACvD,IAAM1B,QAAQ,GAAGJ,WAAW,CAACd,IAAI,CAAC;EAClC,IAAM6C,MAAM,GAAGF,YAAY,CAACC,IAAI,CAAC;EACjC,IAAM5B,GAAG,GAAGE,QAAQ,CAACQ,MAAM,CAAC,UAACC,EAAW;IACtC,IAAMa,KAAK,GAAGb,EAAE,CAACa,KAAK;IACtB,IAAIU,WAAW;IACf,IAAIV,KAAK,CAACtD,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;MAChCgE,WAAW,GAAGP,YAAY,CAACH,KAAK,CAACzD,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/C,MAAM;MACL,IAAM0D,SAAS,GAAGD,KAAK,CAAC7D,aAAa,EAAE;MACvCuE,WAAW,GAAGhF,QAAQ,CAACuE,SAAS,CAAC;;IAEnC,OAAOtE,mBAAmB,CAAC0E,MAAM,EAAEK,WAAW,CAAC;EACjD,CAAC,CAAC;EACF,OAAOlC,GAAG;AACZ;AAEA;;;;;AAKA,OAAM,SAAUmC,aAAaA,CAACnD,IAAI;EAChC,OAAOA,IAAI,CAACmD,aAAa,EAAE,CAACC,GAAG,CAAC,UAACC,EAAmB;IAAK,OAAAA,EAAE,CAAC3D,SAAS;EAAZ,CAAY,CAAC;AACxE;AAEA;AACA,OAAM,SAAU4D,QAAQA,CAACC,EAAS,EAAEC,EAAS;EAC3C,IAAMC,EAAE,GAAGD,EAAE,CAAClD,CAAC,GAAGiD,EAAE,CAACjD,CAAC;EACtB,IAAMoD,EAAE,GAAGF,EAAE,CAACjD,CAAC,GAAGgD,EAAE,CAAChD,CAAC;EACtB,OAAOoD,IAAI,CAACC,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;AACrC;AAEA;AACA,OAAM,SAAUG,SAASA,CAAChB,MAAe,EAAEiB,CAAU;EACnD,IAAIjB,MAAM,CAACxB,MAAM,IAAI,CAAC,EAAE;IACtB,OAAOpD,WAAW,CAAC4E,MAAM,EAAE,KAAK,CAAC;;EAEnC,IAAMkB,KAAK,GAAGlB,MAAM,CAAC,CAAC,CAAC;EACvB,IAAMmB,GAAG,GAAG,EAAE;EACdlG,IAAI,CAAC+E,MAAM,EAAE,UAACoB,KAAK;IACjBD,GAAG,CAACtB,IAAI,CAACuB,KAAK,CAAC3D,CAAC,CAAC;IACjB0D,GAAG,CAACtB,IAAI,CAACuB,KAAK,CAAC1D,CAAC,CAAC;EACnB,CAAC,CAAC;EACF,IAAMqC,IAAI,GAAG5E,iBAAiB,CAACgG,GAAG,EAAEF,CAAC,EAAE,IAAI,CAAC;EAC5ClB,IAAI,CAACsB,OAAO,CAAC,CAAC,GAAG,EAAEH,KAAK,CAACzD,CAAC,EAAEyD,KAAK,CAACxD,CAAC,CAAC,CAAC;EACrC,OAAOqC,IAAI;AACb;AAEA;;;;;;AAMA,OAAM,SAAUuB,OAAOA,CAACxD,GAAS,EAAEsD,KAAY;EAC7C,OAAOtD,GAAG,CAACL,CAAC,IAAI2D,KAAK,CAAC3D,CAAC,IAAIK,GAAG,CAACF,IAAI,IAAIwD,KAAK,CAAC3D,CAAC,IAAIK,GAAG,CAACJ,CAAC,IAAI0D,KAAK,CAAC1D,CAAC,IAAII,GAAG,CAACD,IAAI,GAAGuD,KAAK,CAAC1D,CAAC;AAC1F;AAEA;;;;;;AAMA,OAAM,SAAU6D,WAAWA,CAACpE,IAAU;EACpC,IAAMqE,MAAM,GAAGrE,IAAI,CAACqE,MAAM;EAC1B,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAID,MAAM,EAAE;IACVC,QAAQ,GAAGD,MAAM,CAACjD,KAAK,CAACM,MAAM,CAAC,UAAC6C,GAAG;MAAK,OAAAA,GAAG,KAAKvE,IAAI;IAAZ,CAAY,CAAC;;EAEvD,OAAOsE,QAAQ;AACjB;AAEA,SAASE,eAAeA,CAACxE,IAAU,EAAEiE,KAAY;EAC/C,IAAMQ,KAAK,GAAGzE,IAAI,CAAC0E,aAAa,EAAE;EAClC,OAAOD,KAAK,CAACE,MAAM,CAACV,KAAK,CAAC;AAC5B;AACA;;;;;;;AAOA,OAAM,SAAU5D,eAAeA,CAACL,IAAU,EAAEG,OAAa,EAAE8D,KAAY;EACrE,IAAMW,WAAW,GAAGJ,eAAe,CAACxE,IAAI,EAAEiE,KAAK,CAAC;EAChD,OAAO9D,OAAO,CAACuE,aAAa,EAAE,CAACG,OAAO,CAACD,WAAW,CAAC;AACrD;AAEA;;;;;;;;;;;;AAYA,OAAM,SAAUE,WAAWA,CAACC,OAAiB,EAAE5C,MAAc,EAAE6C,MAAc,EAAEC,MAAc;EAC3F,IAAIC,IAAI,GAAG,KAAK;EAChBpH,IAAI,CAACiH,OAAO,EAAE,UAACI,CAAC;IACd,IAAIA,CAAC,CAACH,MAAM,CAAC,KAAK7C,MAAM,CAAC6C,MAAM,CAAC,IAAIG,CAAC,CAACF,MAAM,CAAC,KAAK9C,MAAM,CAAC8C,MAAM,CAAC,EAAE;MAChEC,IAAI,GAAG,IAAI;MACX,OAAO,KAAK;;EAEhB,CAAC,CAAC;EACF,OAAOA,IAAI;AACb;AAEA;AACA,OAAM,SAAUE,eAAeA,CAACpF,IAAU,EAAEwB,KAAa;EACvD,IAAI6D,KAAK,GAAGrF,IAAI,CAACoF,eAAe,CAAC5D,KAAK,CAAC;EACvC,IAAI,CAAC6D,KAAK,IAAIrF,IAAI,CAACoB,KAAK,EAAE;IACxBtD,IAAI,CAACkC,IAAI,CAACoB,KAAK,EAAE,UAACE,OAAO;MACvB+D,KAAK,GAAGD,eAAe,CAAC9D,OAAO,EAAEE,KAAK,CAAC;MACvC,IAAI6D,KAAK,EAAE;QACT,OAAO,KAAK,CAAC,CAAC;;IAElB,CAAC,CAAC;;;EAEJ,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}